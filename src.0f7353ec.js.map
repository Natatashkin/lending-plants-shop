{"version":3,"sources":["js/slider.json","js/slider.js","index.js"],"names":["module","exports","title","description","Slider","constructor","sliderData","imagesContainer","sliderInfoSelector","prevBtnSelector","nextBtnSelector","currentIndex","sliderInfo","refs","getRefs","init","document","querySelector","images","querySelectorAll","sliderDescription","sliderTitle","sliderText","prevButton","prevBtnTitle","nextButton","nextBtnTitle","normalizeDataObject","setSliderMainContent","addEventListeners","setSliderHeight","innerHeight","window","style","height","imagesLinks","map","image","src","item","index","onPrevButtonClick","console","log","decrementIndex","onNextButtonClick","incrementIndex","addEventListener","bind","currentSliderInfo","textContent","resetActiveImage","find","el","classList","add","setButtonsContent","activeImage","remove","indexPrevBtn","decrementIndexForButtons","indexNextBtn","incrementIndexForButtons","titleForPrevBtn","titleForNextBtn","length","slider"],"mappings":"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","file":"src.0f7353ec.js","sourceRoot":"../src","sourcesContent":["module.exports=[{title:\"kembang flower mantap\",description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\"},{title:\"Rahasia Plant\",description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry Lorem Ipsum has been the industry's standard dummy text ever since the\"},{title:\"Kaktus Plant\",description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry Lorem Ipsum has been the industry's standard dummy text ever since the s\"}];","export default class Slider {\n  constructor({\n    sliderData,\n    imagesContainer,\n    sliderInfoSelector,\n    prevBtnSelector,\n    nextBtnSelector,\n  }) {\n    this.currentIndex = 0;\n    this.sliderInfo = sliderData;\n    this.refs = this.getRefs(\n      imagesContainer,\n      sliderInfoSelector,\n      prevBtnSelector,\n      nextBtnSelector,\n    );\n\n    this.init();\n  }\n\n  getRefs(\n    imagesContainer,\n    sliderInfoSelector,\n    prevBtnSelector,\n    nextBtnSelector,\n  ) {\n    const refs = {};\n    refs.imagesContainer = document.querySelector(imagesContainer);\n    refs.images = refs.imagesContainer.querySelectorAll('.slide');\n    refs.sliderDescription = document.querySelector(sliderInfoSelector);\n    refs.sliderTitle = refs.sliderDescription.querySelector('.slider-title');\n    refs.sliderText = refs.sliderDescription.querySelector('.slider-descr');\n    refs.prevButton = document.querySelector(prevBtnSelector);\n    refs.prevBtnTitle = refs.prevButton.querySelector('.js-prev');\n    refs.nextButton = document.querySelector(nextBtnSelector);\n    refs.nextBtnTitle = refs.nextButton.querySelector('.js-next');\n    return refs;\n  }\n\n  init() {\n    this.normalizeDataObject();\n    this.setSliderMainContent();\n    this.addEventListeners();\n  }\n\n  setSliderHeight() {\n    const innerHeight = window.innerHeight;\n    const slider = document.querySelector('.slider-container');\n    slider.style.height = `${innerHeight}px`;\n  }\n\n  normalizeDataObject() {\n    const { sliderInfo, refs } = this;\n    const { images } = refs;\n    const imagesLinks = [...images].map(image => image.src);\n\n    sliderInfo.map((item, index) => (item.src = imagesLinks[index]));\n  }\n\n  onPrevButtonClick() {\n    console.log('клик по prevButton');\n    this.decrementIndex();\n    this.setSliderMainContent();\n  }\n\n  onNextButtonClick() {\n    console.log('клик по nextButton');\n    this.incrementIndex();\n    this.setSliderMainContent();\n  }\n\n  addEventListeners() {\n    this.refs.prevButton.addEventListener(\n      'click',\n      this.onPrevButtonClick.bind(this),\n    );\n    this.refs.nextButton.addEventListener(\n      'click',\n      this.onNextButtonClick.bind(this),\n    );\n  }\n\n  setSliderMainContent() {\n    const { sliderInfo, currentIndex } = this;\n    const { sliderTitle, sliderText, images } = this.refs;\n\n    const currentSliderInfo = sliderInfo[currentIndex];\n    sliderTitle.textContent = currentSliderInfo.title;\n    sliderText.textContent = currentSliderInfo.description;\n\n    this.resetActiveImage();\n\n    const currentImage = [...images].find(\n      el => el.src === currentSliderInfo.src,\n    );\n\n    currentImage.classList.add('is-active');\n    this.setButtonsContent();\n    this.setSliderHeight();\n  }\n\n  resetActiveImage() {\n    const { imagesContainer } = this.refs;\n    const activeImage = imagesContainer.querySelector('.is-active');\n    if (activeImage) {\n      activeImage.classList.remove('is-active');\n    }\n  }\n\n  setButtonsContent() {\n    const { sliderInfo, refs } = this;\n    const { prevBtnTitle, nextBtnTitle } = refs;\n\n    const indexPrevBtn = this.decrementIndexForButtons();\n    const indexNextBtn = this.incrementIndexForButtons();\n\n    const titleForPrevBtn = sliderInfo[indexPrevBtn];\n    const titleForNextBtn = sliderInfo[indexNextBtn];\n    prevBtnTitle.textContent = titleForPrevBtn.title;\n    nextBtnTitle.textContent = titleForNextBtn.title;\n  }\n\n  incrementIndex() {\n    if (this.currentIndex === this.sliderInfo.length - 1) {\n      this.currentIndex = 0;\n      return;\n    }\n    this.currentIndex += 1;\n  }\n\n  decrementIndex() {\n    if (this.currentIndex === 0) {\n      this.currentIndex = this.sliderInfo.length - 1;\n      return;\n    }\n\n    this.currentIndex -= 1;\n  }\n\n  incrementIndexForButtons() {\n    let index = this.currentIndex + 1;\n    if (index > this.sliderInfo.length - 1) {\n      index = 0;\n      return index;\n    }\n    return index;\n  }\n  decrementIndexForButtons() {\n    let index = this.currentIndex - 1;\n    if (index < 0) {\n      index = this.sliderInfo.length - 1;\n      return index;\n    }\n    return index;\n  }\n}\n","import './sass/main.scss';\nimport sliderInfo from './js/slider.json';\nimport Slider from './js/slider';\n\nconst slider = new Slider({\n  sliderData: sliderInfo,\n  imagesContainer: '[data-images]',\n  sliderInfoSelector: '[data-info]',\n  prevBtnSelector: '[data-action=\"previous\"]',\n  nextBtnSelector: '[data-action=\"next\"]',\n});\n"]}